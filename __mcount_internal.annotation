__mcount_internal() /usr/lib/x86_64-linux-gnu/libc.so.6
Event: cycles:P

Percent        
               
               
             Disassembly of section .text:
               
             0000000000128e00 <__mcount_internal>:
  2.08         endbr64        
  3.59         xor     %eax,%eax
  1.72         mov     $0x1,%edx
 38.69         lock    cmpxchg %rdx,_gmonparam
  1.70       ↓ jne     f0     
  1.83         sub     _gmonparam+0x40,%rdi
  1.71         cmp     %rdi,_gmonparam+0x50
  1.60       ↓ jb      bf     
  1.66         mov     _gmonparam+0x60,%rcx
  1.62         mov     _gmonparam+0x18,%rax
  1.75         shr     %cl,%rdi
  1.67         movslq  %edi,%rdi
  1.69         lea     (%rax,%rdi,8),%r8
  1.65         mov     _gmonparam+0x28,%rdi
  1.72         mov     (%r8),%rax
  1.63         test    %rax,%rax
             ↓ je      d0     
  1.67         lea     (%rax,%rax,2),%rax
  1.75         lea     (%rdi,%rax,8),%rcx
  5.07         cmp     %rsi,(%rcx)
             ↓ jne     84     
  1.71       ↓ jmp     150    
               nop            
  0.20   70:   lea     (%rax,%rax,2),%rdx
  0.22         lea     (%rdi,%rdx,8),%rdx
  0.63         cmp     %rsi,(%rdx)
  0.01       ↓ je      128    
               mov     %rdx,%rcx
  0.12   84:   mov     0x10(%rcx),%rax
  0.29         test    %rax,%rax
             ↑ jne     70     
               mov     0x10(%rdi),%rax
               add     $0x1,%rax
               cmp     _gmonparam+0x38,%rax
               mov     %rax,0x10(%rdi)
             ↓ jae     e5     
               lea     (%rax,%rax,2),%rdx
               lea     (%rdi,%rdx,8),%rdx
               mov     %rsi,(%rdx)
               movq    $0x1,0x8(%rdx)
               mov     (%r8),%rcx
               mov     %rcx,0x10(%rdx)
               mov     %rax,(%r8)
  3.10   bf:   movq    $0x0,_gmonparam
  5.95       ← ret            
               nop            
         d0:   mov     0x10(%rdi),%rax
               add     $0x1,%rax
               cmp     _gmonparam+0x38,%rax
               mov     %rax,0x10(%rdi)
             ↓ jb      f8     
         e5:   movq    $0x2,_gmonparam
         f0: ← ret            
               nop            
         f8:   mov     %rax,(%r8)
               lea     (%rax,%rax,2),%rax
               lea     (%rdi,%rax,8),%rax
               mov     %rsi,(%rax)
               movq    $0x1,0x8(%rax)
               movq    $0x0,0x10(%rax)
               movq    $0x0,_gmonparam
             ← ret            
               nop            
  0.14  128:   mov     0x10(%rdx),%rsi
  0.46         addq    $0x1,0x8(%rdx)
  0.37         mov     %rsi,0x10(%rcx)
  0.48         mov     (%r8),%rcx
  0.41         mov     %rcx,0x10(%rdx)
  0.31         mov     %rax,(%r8)
  0.25         movq    $0x0,_gmonparam
  0.50       ← ret            
               nop            
  6.16  150:   addq    $0x1,0x8(%rcx)
  3.87       ↑ jmp     bf     
